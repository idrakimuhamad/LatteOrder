<link href="http://d2v52k3cl9vedd.cloudfront.net/basscss/4.2.2/basscss.min.css" rel="stylesheet">
<div class="front-page">
  <header class="center white bg-mid-gray">
    <h1 class="mt0">Latte Ordering REST API</h1>
    <p class="h3">The docs for the API and example of request</p>
  </header>
  <div class="content">
    <section class="container px2 py3" id="intro">
      <h1 class="mt0">
        <a href="#intro">.Intro</a>
      </h1>
      <div class="clearfix mxn2">
        <div class="sm-col sm-col-8 md-col-9 px2">
          <div>
            <p>The API expose a number of ability, as such listed below:</p>
            <ul>
              <li>Query closest restaurant from the given coordinate</li>
              <li>Query for menus</li>
              <li>Make order using email or phone number</li>
              <li>Update order's status</li>
              <li>Look up for customer's order history</li>
            </ul>
            <p>The request doesn't require any authentication. The purpose is just for a usage example of Sails.js.</p>
          </div>
        </div>
      </div>
    </section>
    <section class="container px2 py3" id="getstarted">
      <h1 class="mt0">
        <a href="/#getstarted">.Get Started</a>
      </h1>
      <div class="clearfix mxn2">
        <div class="sm-col sm-col-8 md-col-9 px2">
          <div>
            <p>To get started, before running the app, make sure to run <code>npm install</code> to install the dependencies. After that, run <code>sails lift</code> to run the app.</p>
            <p>You can then access the app at <a href="http://localhost:1337">http://localhost:1337</a></p>
            <p>The app by default doesn't have any data. So to add the default data, navigate to <a href="http://localhost:1337/firsttime">http://localhost:1337/firsttime</a> which will automatically insert the default data, if it doesn't exists.</p>
            <p>Once you've done that, you can start testing the API. Note that, most of the request would require the <code>Content-Type: application/json</code> header.</p>
          </div>
        </div>
      </div>
    </section>
    <section class="container px2 py3">
      <h1 class="mt0">
        .Testing
      </h1>
      <div class="clearfix mxn2">
        <div class="sm-col sm-col-8 md-col-9 px2">
          <div>
            <h2 class="h3">
              Query for closest restaurant
            </h2>
            <p>This request will return a JSON object containing the closest restaurant from the given coordinate.</p>
            <p><b>Operation</b></p>
            <p><code>GET /restaurant</code></p>
            <p><b>Request</b></p>
            <table class="table-light">
              <thead>
                <tr>
                  <th>Property</th><th>Type</th><th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr> <td>lat</td><td><em>string</em></td><td>The latitude of the location.</td> </tr>
                <tr> <td>lng</td> <td><em>string</em></td> <td>The longitude of the location.</td> </tr>
                <tr> <td>radii</td><td>string</td> <td>The maximum distance radius between the given location to the searched location</td> </tr>
              </tbody>
            </table>
            <p><b>Response</b></p>
            <table class="table-light">
              <thead>
                <tr>
                  <th>Property</th><th>Type</th><th>Description</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>_id</td><td><em>string</em></td><td>The MongoDB ID for this entry.</td>
                </tr>
                <tr>
                  <td>formatted_address</td> <td><em>string</em></td> <td>The address of the restaurant.</td>
                </tr>
                <tr>
                  <td>geometry</td><td>object</td>
                  <td>The geometry object which contained the restaurant coordinate. It includes the <code>location</code> object like below:
                    <pre><code>"location" : {
                      "lat": // the latitude,
                      "lng": // the longitude
                      }
                  </td>
                </tr>
                <tr>
                  <td>icon</td> <td><em>string</em></td> <td>The icon from Google Maps for this restaurant.</td>
                </tr>
                <tr>
                  <td>name</td> <td><em>string</em></td> <td>The restaurant name.</td>
                </tr>
                <tr>
                  <td>place_id</td> <td><em>string</em></td> <td>The Google Maps place ID for this location.</td>
                </tr>
                <tr>
                  <td>reference</td> <td><em>string</em></td> <td>The Google Maps reference for this location.</td>
                </tr>
                <tr>
                  <td>types</td> <td><em>array</em></td> <td>The types of this location returned by Google Maps.</td>
                </tr>
                <tr>
                  <td>createdAt</td> <td><em>date_time</em></td> <td>The date and time as defined in <a href="http://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 Section 5.6</a> when this item was created.</td>
                </tr>
                <tr>
                  <td>updatedAt</td> <td><em>date_time</em></td> <td>The date and time as defined in <a href="http://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 Section 5.6</a> when this item was modified.</td>
                </tr>
              </tbody>
            </table>
            <p><b>Request Example (cURL)</b></p>
            <pre class="px2 py2">curl -v -G http://localhost:1337/restaurant -d "lat=3.0&lng=101.0&radii=7"</pre>
            <p><b>Response Sample</b></p>
            <pre class="px2 py2">[
                {
                  "_id": "4aba7b2ac77ff8a9b41db997dd2fb05967c3bb88",
                  "formatted_address": "Jalan Anggerik Vanilla 31/93, Kota Kemuning, 40460 Shah Alam, Selangor, Malaysia",
                  "geometry": {
                      "location": {
                          "lat": 3.003213,
                          "lng": 101.541283
                      }
                  },
                  "icon": "http://maps.gstatic.com/mapfiles/place_api/icons/restaurant-71.png",
                  "name": "Starbucks",
                  "place_id": "ChIJwYeMiI6yzTERpsrVi9QN_mI",
                  "reference": "CnRrAAAAjz3d1NtcdiSMHtW0idpw0jIf4AEWtiZrutv6AiJC0YeKpt1VjDuScp1TsK0fXWWusFCSeOSx0JiStXWXZ3ILG25SzaBTTPE5xHRwbtoB9qFoedlMNFxEPpB_x7i4E3VP41dclK2J5piJqb7-Up0YxBIQfcaItO0B_g8U_rY0Aj1EURoUuiHOB6MYj1obqshFXLnJkOBkadY",
                  "types": [
                      "restaurant",
                      "food",
                      "establishment"
                  ],
                  "createdAt": "2015-01-15T04:37:50.213Z",
                  "updatedAt": "2015-01-15T04:37:50.213Z"
                }
              ]</pre>
          </div>
        </div>
      </div>
    </section>
  </div>
</div>
